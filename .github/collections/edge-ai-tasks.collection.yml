id: edge-ai-tasks
name: Tasks by microsoft/edge-ai
description: Task Researcher and Task Planner for intermediate to expert users and large codebases - Brought to you by microsoft/edge-ai
tags: [architecture, planning, research, tasks, implementation]
items:
  # Planning Chat Modes
  - path: chatmodes/task-researcher.chatmode.md
    kind: chat-mode
    usage: |
      Now you can iterate on research for your tasks!

      ```markdown, research.prompt.md
      ---
      mode: task-researcher
      title: Research microsoft fabric realtime intelligence terraform support
      ---
      Review the microsoft documentation for fabric realtime intelligence
      and come up with ideas on how to implement this support into our terraform components.
      ```

      Research is dumped out into a .copilot-tracking/research/*-research.md file and will include discoveries for GHCP along with examples and schema that will be useful during implementation.

      Also, task-researcher will provide additional ideas for implementation which you can work with GitHub Copilot on selecting the right one to focus on.

  - path: chatmodes/task-planner.chatmode.md
    kind: chat-mode
    usage: |
      Also, task-researcher will provide additional ideas for implementation which you can work with GitHub Copilot on selecting the right one to focus on.

      ```markdown, task-plan.prompt.md
      ---
      mode: task-planner
      title: Plan microsoft fabric realtime intelligence terraform support
      ---
      #file: .copilot-tracking/research/*-fabric-rti-blueprint-modification-research.md
      Build a plan to support adding fabric rti to this project
      ```

      `task-planner` will help you create a plan for implementing your task(s). It will use your fully researched ideas or build new research if not already provided.

      `task-planner` will produce three (3) files that will be used by `task-implementation.instructions.md`.

      * `.copilot-tracking/plan/*-plan.instructions.md`

        * A newly generated instructions file that has the plan as a checklist of Phases and Tasks.
      * `.copilot-tracking/details/*-details.md`

        * The details for the implementation, the plan file refers to this file for specific details (important if you have a big plan).
      * `.copilot-tracking/prompts/implement-*.prompt.md`

        * A newly generated prompt file that will create a `.copilot-tracking/changes/*-changes.md` file and proceed to implement the changes.

      Continue to use `task-planner` to iterate on the plan until you have exactly what you want done to your codebase.

  # Planning Instructions
  - path: instructions/task-implementation.instructions.md
    kind: instruction
    usage: |
      Continue to use `task-planner` to iterate on the plan until you have exactly what you want done to your codebase.

      When you are ready to implement the plan, **create a new chat** and switch to `Agent` mode then fire off the newly generated prompt.

      ```markdown, implement-fabric-rti-changes.prompt.md
      ---
      mode: agent
      title: Implement microsoft fabric realtime intelligence terraform support
      ---
      /implement-fabric-rti-blueprint-modification phaseStop=true
      ```

      This prompt has the added benefit of attaching the plan as instructions, which helps with keeping the plan in context throughout the whole conversation.

      **Expert Warning** ->>Use `phaseStop=false` to have Copilot implement the whole plan without stopping. Additionally, you can use `taskStop=true` to have Copilot stop after every Task implementation for finer detail control.

      To use these generated instructions and prompts, you'll need to update your `settings.json` accordingly:

      ```json
          "chat.instructionsFilesLocations": {
              // Existing instructions folders...
              ".copilot-tracking/plans": true
          },
          "chat.promptFilesLocations": {
              // Existing prompts folders...
              ".copilot-tracking/prompts": true
          },
      ```

display:
  ordering: alpha # or "manual" to preserve the order above
  show_badge: false # set to true to show collection badge on items
